name: "CI CD Pipeline"

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: FireBase App Distribution Using CI/CD

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
#  lint:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      # Set Current Date As Env Variable
#      - name: Set current date as env variable
#        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
#
#      # Set Repository Name As Env Variable
#      - name: Set repository name as env variable
#        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
#
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Run List Check
#        run: ./gradlew lintDebug
#
#      - name: Upload Lint Debug html Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: lint.html
#          path: ./app/build/reports/lint-results-debug.html
#
#  unit-test:
#    runs-on: ubuntu-latest
#    needs: [ lint ]
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#      - name: Run Unit Test
#        run: ./gradlew test
#
#      - name: Upload Unit Test Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: unit_test_report
#          path: ./app/build/reports/tests/testDebugUnitTest

  instrumentation-test:
    runs-on: macos-11.0
#    needs: [ unit-test ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          emulator-build: 5554
          script: ./gradlew connectedCheck

      - name: Upload instrumentation test report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation_test_report
          path: ./app/build/reports/androidTests/connected/

  #    buildDebug:
  #      needs: [instrumentation-test]
  #      runs-on: ubuntu-latest
  #
  #      steps:
  #        - name: Checkout
  #          uses: actions/checkout@v3
  #
  #        - name: set up JDK 17
  #          uses: actions/setup-java@v3
  #          with:
  #            java-version: '17'
  #            distribution: 'temurin'
  #            cache: gradle
  #
  #        - name: Grant execute permission for gradlew
  #          run: chmod +x gradlew
  #
  #        - name: Restore Cache
  #          uses: actions/cache@v2
  #          with:
  #            path: |
  #              ~/.gradle/caches
  #              ~/.gradle/wrapper
  #            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
  #            restore-keys: |
  #              ${{ runner.os }}-gradle-
  #
  #        - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
  #          run: ./gradlew assembleDebug
  #
  #        - name: Upload APK Debug - ${{ env.repository_name }}
  #          uses: actions/upload-artifact@v4
  #          with:
  #            name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
  #            path: ./app/build/outputs/apk/MageNative/debug/app-MageNative-debug.apk
  #
  #    buildRelease:
  #      needs: [instrumentation-test]
  #      runs-on: ubuntu-latest
  #
  #      steps:
  #        - name: Checkout
  #          uses: actions/checkout@v3
  #
  #        - name: set up JDK 17
  #          uses: actions/setup-java@v3
  #          with:
  #            java-version: '17'
  #            distribution: 'temurin'
  #            cache: gradle
  #
  #        - name: Grant execute permission for gradlew
  #          run: chmod +x gradlew
  #
  #        - name: Restore Cache
  #          uses: actions/cache@v2
  #          with:
  #            path: |
  #              ~/.gradle/caches
  #              ~/.gradle/wrapper
  #            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
  #            restore-keys: |
  #              ${{ runner.os }}-gradle-
  #
  #        - name: Build apk release project (APK) - ${{ env.main_project_module }} module
  #          run: ./gradlew assembleMageNativeRelease
  #
  #        - name: Upload APK Release - ${{ env.repository_name }}
  #          uses: actions/upload-artifact@v4
  #          with:
  #            name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
  #            path: ./app/MageNative/release/app-MageNative-release.apk

  firebaseAppDistributionRelease:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle to Create Debug Build
        run: ./gradlew assembleDebug
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers_mage
          file: ./app/build/outputs/apk/debug/app-debug.apk